---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: alertpolicies.opsgenie.upbound.io
spec:
  group: opsgenie.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - opsgenie
    kind: AlertPolicy
    listKind: AlertPolicyList
    plural: alertpolicies
    singular: alertpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AlertPolicy is the Schema for the AlertPolicys API. Manages a
          Alert Policy within Opsgenie.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AlertPolicySpec defines the desired state of AlertPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  actions:
                    description: Actions to add to the alerts original actions value
                      as a list of strings. If ignore_original_actions field is set
                      to true, this will replace the original actions.
                    items:
                      type: string
                    type: array
                  alertDescription:
                    description: 'Description of the alert. You can use {{description}}
                      to refer to the original alert description. Default: {{description}}'
                    type: string
                  alias:
                    description: 'Alias of the alert. You can use {{alias}} to refer
                      to the original alias. Default: {{alias}}'
                    type: string
                  continuePolicy:
                    description: 'It will trigger other modify policies if set to
                      true. Default: false'
                    type: boolean
                  enabled:
                    description: 'If policy should be enabled. Default: true'
                    type: boolean
                  entity:
                    description: 'Entity field of the alert. You can use {{entity}}
                      to refer to the original entity. Default: {{entity}}'
                    type: string
                  filter:
                    description: 'A alert filter which will be applied. This filter
                      can be empty: filter {} - this means match-all. This is a block,
                      structure is documented below.'
                    items:
                      properties:
                        conditions:
                          description: Conditions applied to filter. This is a block,
                            structure is documented below.
                          items:
                            properties:
                              expectedValue:
                                description: 'User defined value that will be compared
                                  with alert field according to the operation. Default:
                                  empty string User defined value that will be compared
                                  with alert field according to the operation. Default
                                  value is empty string'
                                type: string
                              field:
                                description: Specifies which alert field will be used
                                  in condition. Possible values are message, alias,
                                  description, source, entity, tags, actions, details,
                                  extra-properties, responders, teams, priority
                                type: string
                              key:
                                description: If field is set as extra-properties,
                                  key could be used for key-value pair If 'field'
                                  is set as 'extra-properties', key could be used
                                  for key-value pair
                                type: string
                              not:
                                description: 'Indicates behaviour of the given operation.
                                  Default: false Indicates behaviour of the given
                                  operation. Default value is false'
                                type: boolean
                              operation:
                                description: It is the operation that will be executed
                                  for the given field and key. Possible operations
                                  are matches, contains, starts-with, ends-with, equals,
                                  contains-key, contains-value, greater-than, less-than,
                                  is-empty, equals-ignore-whitespace.
                                type: string
                              order:
                                description: Order of the condition in conditions
                                  list Order of the condition in conditions list
                                type: number
                            required:
                            - field
                            - operation
                            type: object
                          type: array
                        type:
                          description: 'A filter type, supported types are: match-all,
                            match-any-condition, match-all-conditions. Default: match-all'
                          type: string
                      type: object
                    type: array
                  ignoreOriginalActions:
                    description: 'If set to true, policy will ignore the original
                      actions of the alert. Default: false'
                    type: boolean
                  ignoreOriginalDetails:
                    description: 'If set to true, policy will ignore the original
                      details of the alert. Default: false'
                    type: boolean
                  ignoreOriginalResponders:
                    description: 'If set to true, policy will ignore the original
                      responders of the alert. Default: false'
                    type: boolean
                  ignoreOriginalTags:
                    description: 'If set to true, policy will ignore the original
                      tags of the alert. Default: false'
                    type: boolean
                  message:
                    description: Message of the alerts
                    type: string
                  name:
                    description: Name of the alert policy
                    type: string
                  policyDescription:
                    description: Description of the policy. This can be max 512 characters.
                    type: string
                  priority:
                    description: Priority of the alert. Should be one of P1, P2, P3,
                      P4, or P5
                    type: string
                  responders:
                    description: 'Responders to add to the alerts original responders
                      value as a list of teams, users or the reserved word none or
                      all. If ignore_original_responders field is set to true, this
                      will replace the original responders. The possible values for
                      responders are: user, team. This is a block, structure is documented
                      below.'
                    items:
                      properties:
                        id:
                          description: ID of the responder
                          type: string
                        idRef:
                          description: Reference to a Team in team to populate id.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        idSelector:
                          description: Selector for a Team in team to populate id.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        name:
                          description: Name of the responder
                          type: string
                        type:
                          description: 'Type of responder. Acceptable values are:
                            user or team'
                          type: string
                        username:
                          description: Username of the responder
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  source:
                    description: 'Source field of the alert. You can use {{source}}
                      to refer to the original source. Default: {{source}}'
                    type: string
                  tags:
                    description: Tags to add to the alerts original tags value as
                      a list of strings. If ignore_original_responders field is set
                      to true, this will replace the original responders.
                    items:
                      type: string
                    type: array
                  teamId:
                    description: Id of team that this policy belongs to.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  timeRestriction:
                    description: Time restrictions specified in this field must be
                      met for this policy to work. This is a block, structure is documented
                      below.
                    items:
                      properties:
                        restriction:
                          description: 'A definition of hourly definition applied
                            daily, this has to be used with combination: type = time-of-day.
                            This is a block, structure is documented below.'
                          items:
                            properties:
                              endHour:
                                description: Ending hour of restriction on defined
                                  end_day
                                type: number
                              endMin:
                                description: Ending minute of restriction on defined
                                  end_hour
                                type: number
                              startHour:
                                description: Starting hour of restriction on defined
                                  start_day
                                type: number
                              startMin:
                                description: Staring minute of restriction on defined
                                  start_hour
                                type: number
                            required:
                            - endHour
                            - endMin
                            - startHour
                            - startMin
                            type: object
                          type: array
                        restrictions:
                          description: List of days and hours definitions for field
                            type = weekday-and-time-of-day. This is a block, structure
                            is documented below.
                          items:
                            properties:
                              endDay:
                                description: Ending day of restriction (eg. wednesday)
                                type: string
                              endHour:
                                description: Ending hour of restriction on defined
                                  end_day
                                type: number
                              endMin:
                                description: Ending minute of restriction on defined
                                  end_hour
                                type: number
                              startDay:
                                description: Starting day of restriction (eg. monday)
                                type: string
                              startHour:
                                description: Starting hour of restriction on defined
                                  start_day
                                type: number
                              startMin:
                                description: Staring minute of restriction on defined
                                  start_hour
                                type: number
                            required:
                            - endDay
                            - endHour
                            - endMin
                            - startDay
                            - startHour
                            - startMin
                            type: object
                          type: array
                        type:
                          description: 'Defines if restriction should apply daily
                            on given hours or on certain days and hours. Possible
                            values are: time-of-day, weekday-and-time-of-day'
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                required:
                - message
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AlertPolicyStatus defines the observed state of AlertPolicy.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the Opsgenie Alert Policy.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
